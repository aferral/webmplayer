{
  "version": 3,
  "sources": [
    "../../.nvm/versions/node/v4.1.1/lib/node_modules/watchify/node_modules/browser-pack/_prelude.js",
    "js/components/dropdown.js",
    "js/components/player.js",
    "js/helpers/time.js",
    "js/index.js",
    "js/main.js"
  ],
  "names": [],
  "mappingsxFA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var toggles = document.querySelectorAll('.dropdown-toggle');\nvar dropdowns = [];\n\nvar hasClass = function (el, cl) {\n\treturn (el.classList.toString().indexOf(cl) > -1) ? true : false;\n}\n\nif (toggles) {\n\ttoggles.forEach(function (toggle) {\n\t\ttoggle.addEventListener('click', function (e) {\n\n\t\t\te.stopPropagation();\n\t\t\t\n\t\t\tvar target = this.getAttribute('data-dropdown');\n\t\t\tif (!target) return false;\n\n\t\t\tvar dropdown = document.querySelector('#' + target);\n\t\t\tif (!dropdown) return false;\n\n\t\t\tif (hasClass(dropdown, 'is-active')) {\n\t\t\t\tdropdown.classList.remove('is-active');\n\t\t\t} else {\n\t\t\t\tdropdown.classList.add('is-active');\n\t\t\t\tdropdowns.push(dropdown);\n\t\t\t\tdropdown.addEventListener('click', function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}, false);\n\t\t\t}\n\n\t\t}, false);\n\t});\n\n\tdocument.body.addEventListener('click', function () {\n\n\t\tdropdowns.forEach(function (dropdown) {\n\t\t\tif (hasClass(dropdown, 'is-active')) {\n\t\t\t\tdropdown.classList.remove('is-active');\n\t\t\t\tdropdowns.splice(dropdowns.indexOf(dropdown), 1);\n\t\t\t}\n\t\t});\n\n\t}, false);\n\n}",
    "var timeHelper = require('../helpers/time');\n\nconsole.log(timeHelper);\n\nvar audio           = document.querySelector(\"#player\"),\n    btnPlay         = document.querySelector(\"#btn-play\"),\n    btnPause        = document.querySelector(\"#btn-pause\"),\n    btnPrev         = document.querySelector(\"#prev\"),\n    btnNext         = document.querySelector(\"#next\"),\n    btnRepeat       = document.querySelector(\"#repeat\"),\n    btnRandom       = document.querySelector(\"#random\"),\n    volumeControl   = document.querySelector(\"#volume\"),\n    timeLine        = document.querySelector(\"#timeline\"),\n    musicTimeCount  = document.querySelector(\"#time-count\"),\n    musicTime       = document.querySelector(\"#time\"),\n    musicName       = document.querySelector(\"#music-name\"),\n    playListElement = document.querySelector(\"#play-list\"),\n    loading         = document.querySelector(\"#loading-music\"),\n    flip            = document.querySelector(\"#flip-container\"),\n    rd              = new FileReader();\n\nvar Player = {};\n\nPlayer.currentTrack = 0;\nPlayer.isPlaying    = false;\nPlayer.isRepeating  = false;\nPlayer.isRandomized = false;\nPlayer.playList     = [];\n\nPlayer.setPlayList = function (music) {\n    Player.playList.push(music);\n}\n\nPlayer.clearPlayList = function () {\n    Player.playList = [];\n}\n\nPlayer.showLoading = function () {\n    loading.classList.add(\"show\");\n};\n\nPlayer.hideLoading = function () {\n    loading.classList.remove(\"show\");\n};\n\n//atacha a musica passada como argumento no player\nPlayer.playMusic = function (track) {\n    \n    rd.onloadstart = Player.showLoading();\n\n    rd.onload = function () {\n        audio.src = this.result;\n    }\n\n    rd.readAsDataURL(Player.playList[track]);\n\n    audio.onloadeddata = function() {\n        Player.hideLoading();\n        Player.play(track, parseInt(Player.currentTrack) );\n        Player.currentTrack = parseInt(track) || 0;\n        Player.setMusicName(Player.playList[track].name);\n        Player.setTimeLineMax(this.duration);\n        Player.setMusicTime(this.duration);\n    };\n    \n};\n\nPlayer.play = function (track, lastTrack) {\n    \n    track = track || Player.currentTrack;\n\n    if (audio.src == \"\") return false;\n\n    Player.isPlaying = true;\n    audio.play(); //metodo nativo do objeto HTMLAudioElement\n\n    flip.classList.add('is-flipped');\n\n    if (lastTrack > -1) document.querySelector(\"#list-icon-\"+lastTrack).classList.remove(\"playing\");\n    document.querySelector(\"#list-icon-\"+track).classList.add(\"playing\");\n};\n\nPlayer.pause = function () {\n    \n    if (audio.src == \"\") return false;\n\n    Player.isPlaying = false;\n    audio.pause(); //metodo nativo do objeto HTMLAudioElement\n    \n    flip.classList.remove('is-flipped');\n    document.querySelector(\"#list-icon-\"+Player.currentTrack).classList.remove(\"playing\");\n};\n\nPlayer.playPrev = function () {\n    if (audio.src == \"\") return false;\n    var prev = Player.currentTrack - 1;\n    \n    (prev > -1) ? Player.playMusic(prev) : Player.playMusic(0);\n};\n\nPlayer.playNext = function () {\n    if (audio.src == \"\") return false;\n\n    var next = Player.currentTrack + 1;\n    var lastMusic = Player.playList.length - 1;\n\n    if (Player.isRandomized === false) {\n        (next <= lastMusic) ? Player.playMusic(next) : Player.playMusic(0) ;\n    } else {\n        var random = Math.round( Math.random() * (lastMusic) );\n        Player.playMusic(random);\n    }\n};\n\nPlayer.repeat = function () {\n    if (Player.isRepeating === false) {\n        btnRepeat.classList.add('is-on');\n        audio.setAttribute(\"loop\", \"\");\n        Player.isRepeating = true;\n    } else {\n        btnRepeat.classList.remove('is-on');\n        audio.removeAttribute(\"loop\");\n        Player.isRepeating = false;\n    }\n};\n\nPlayer.randomize = function () {\n    if (Player.isRandomized === false) {\n        btnRandom.classList.add('is-on');\n        Player.isRandomized = true;\n    } else {\n        btnRandom.classList.remove('is-on');\n        Player.isRandomized = false;\n    }\n};\n\nPlayer.changeVolume = function () {\n    audio.volume = volumeControl.value / 10;\n};\n\nPlayer.changeTime = function () {\n    if (audio.readyState != 0) audio.currentTime = timeLine.value;\n};\n\nPlayer.timeLineUpdate = function () {\n    timeLine.value = audio.currentTime;\n};\n\nPlayer.setTimeLineMax = function (time) {\n    timeLine.setAttribute( \"max\", Math.round(time) );\n};\n\nPlayer.setMusicTime = function (time) {\n    musicTime.innerHTML = timeHelper.secondsToTime( Math.round(time) );\n};\n\nPlayer.musicCountUpdate = function (time) {\n    musicTimeCount.innerHTML = timeHelper.secondsToTime( Math.round(time) );\n};\n\nPlayer.setMusicName = function (name) {\n    musicName.innerHTML = name.replace(\".mp3\", \"\");\n};\n\nPlayer.createPlayList = function () {\n    var musicName,\n        i,\n        len = Player.playList.length,\n        li,\n        button,\n        span;\n\n    playListElement.innerHTML = \"\";\n\n    for (i = 0; i < len; i += 1) {\n        \n        musicName = document.createTextNode(Player.playList[i].name.replace(\".mp3\", \"\"));\n\n        li     = document.createElement(\"li\");\n        button = document.createElement(\"button\");\n        span   = document.createElement(\"span\");\n\n        button.setAttribute(\"type\", \"button\");\n        button.setAttribute(\"class\", \"btn btn-circle btn-small icon icon-play\");\n        \n        (function (id) {\n            button.addEventListener('click', function () { Player.playMusic(id) } , false);\n        })(i);\n\n        span.setAttribute(\"id\", \"list-icon-\"+i);\n        span.setAttribute(\"class\", \"sound-wave\");\n        span.innerHTML = \"<span class='bar'></span><span class='bar'></span><span class='bar'></span>\";\n\n        li.setAttribute(\"class\", \"list-item\");\n        li.appendChild(button);\n        li.appendChild(musicName);\n        li.appendChild(span);\n        playListElement.appendChild(li);\n\n    };\n};\n\n//bot�es\nbtnPlay.addEventListener(\"click\", function () { Player.play(Player.currentTrack) }, false);\nbtnPause.addEventListener(\"click\", Player.pause, false);\nbtnPrev.addEventListener(\"click\", Player.playPrev, false);\nbtnNext.addEventListener(\"click\", Player.playNext, false);\nbtnRepeat.addEventListener(\"click\", Player.repeat, false);\nbtnRandom.addEventListener(\"click\", Player.randomize, false);\n\n//volume\nvolumeControl.addEventListener(\"change\", Player.changeVolume, false);\n\n//timeLine\ntimeLine.addEventListener(\"change\", Player.changeTime, false);\ntimeLine.addEventListener(\"mousedown\", function() {\n    audio.removeEventListener(\"timeupdate\", Player.timeLineUpdate);\n}, false);\ntimeLine.addEventListener(\"mouseup\", function() {\n    audio.addEventListener(\"timeupdate\", Player.timeLineUpdate, false);\n}, false);\n\n//player\naudio.addEventListener(\"ended\", Player.playNext, false);\naudio.addEventListener(\"timeupdate\", Player.timeLineUpdate, false);\naudio.addEventListener(\"timeupdate\", function() { \n    Player.musicCountUpdate( Math.floor(this.currentTime) );\n}, false);\n\nmodule.exports = {\n    setPlayList: Player.setPlayList,\n    clearPlayList: Player.clearPlayList,\n    playMusic: Player.playMusic.bind(Player),\n    createPlayList: Player.createPlayList\n}",
    "function padLeft(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nvar secondsToTime = function (seconds) {\n\n  if (isNaN(seconds) || seconds == \"\" || typeof seconds != 'number') return \"00:00\";\n\n  var hours   = parseInt( seconds / 3600 ) % 24,\n    minutes = parseInt( seconds / 60 ) % 60,\n    seconds = parseInt( seconds % 60);\n\n  if (hours > 0) {\n    var result = padLeft(hours, 2, 0) + ':' + padLeft(minutes, 2, 0) + ':' + padLeft(seconds, 2, 0); \n  } else {\n    var result = padLeft(minutes, 2, 0) + ':' + padLeft(seconds, 2, 0); \n  }\n\n  return result;\n\n};\n\nmodule.exports = {\n  secondsToTime: secondsToTime\n}",
    "\"use strict\";\n\nrequire('./components/dropdown.js');\n\nvar Player = require('./components/player.js');\n\n(function () {\n    \n    var btnUpload   = document.querySelector(\"#btn-upload\"),\n        fileElement = document.querySelector(\"#file-element\"),\n        themeLight  = document.querySelector(\"#theme-light\"),\n        themeDark   = document.querySelector(\"#theme-dark\"),\n        btnsTheme   = document.querySelectorAll('.theme-item-btn'),\n        btnsColor   = document.querySelectorAll('.btn-color'),\n        \n        setLocalStorage = function (item, value) {\n            if (window.hasOwnProperty('localStorage')) {\n                localStorage.setItem(item, value);\n            }\n        },\n\n        getLocalStorage = function (item) {\n            if (window.hasOwnProperty('localStorage')) {\n                return localStorage.getItem(item);\n            }\n        },\n\n        setTheme = function (theme) {\n            \n            theme = theme || \"light\";\n            document.body.classList.remove('dark', 'light');\n            document.body.classList.add(theme);\n            setLocalStorage(\"theme\", theme);\n            \n        },\n\n        setColor = function (color) {\n\n            color = color || \"green\";\n            document.body.className = document.body.className.replace(/(blue|red|green|pink|purple|cyan|teal|yellow|orange)/g, '');\n            document.body.classList.add(color);\n            setLocalStorage(\"color\", color);\n\n        };\n\n    if (window.hasOwnProperty('localStorage')) {\n        setTheme(getLocalStorage('theme'));\n        setColor(getLocalStorage('color'));\n    }\n\n    btnUpload.addEventListener(\"click\", function (e) {\n        \n        e.stopPropagation();\n        e.preventDefault();\n        \n        if (fileElement) {\n            fileElement.click();\n        }\n        \n    }, false);\n\n    fileElement.addEventListener(\"change\", function () {\n\n        Player.clearPlayList();\n\n        for (var i = 0, len = this.files.length; i < len; i += 1) {\n            Player.setPlayList(this.files[i]);\n        }\n\n        Player.playMusic.apply(Player, [0]);\n        Player.createPlayList();\n\n    }, false);\n\n    btnsTheme.forEach(function (btnTheme) {\n        btnTheme.addEventListener('click', function () {\n            var themeScheme = this.getAttribute('data-theme-scheme');\n            setTheme(themeScheme);\n        }, false);\n    });\n\n    btnsColor.forEach(function (btnColor) {\n        btnColor.addEventListener('click', function () {\n            var color = this.getAttribute('data-theme-color');\n            setColor(color);\n        }, false);\n    });\n\n}());",
    "require('./index.js');"
  ]
}